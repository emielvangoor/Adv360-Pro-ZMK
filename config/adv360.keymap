/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define NONE 0
#define SYMBOLS 1
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2

/ {
    behaviors {
        #include "macros.dtsi"

        braces: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBRC>, <&kp RBRC>;
        };

        parenthesis: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };

        lt_gt: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LT>, <&kp GT>;
        };

        quotes: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp APOSTROPHE>, <&kp DOUBLE_QUOTES>;
        };

        colons: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_4";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SEMICOLON>, <&kp COLON>;
        };

        square_bracket: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_5";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <25>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        arrows: arrows {
            compatible = "zmk,behavior-tap-dance";
            label = "ARROWS";
            #binding-cells = <0>;
            bindings = <&arrow>, <&dbl_arrow>;
        };

        space_symbol_layer: space_symbol_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACE_SYMBOL_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };

        pp_or_next_song: pp_or_next_song {
            compatible = "zmk,behavior-tap-dance";
            label = "PP_OR_NEXT_SONG";
            #binding-cells = <0>;
            bindings = <&kp C_PLAY_PAUSE>, <&kp C_NEXT>, <&kp C_PREV>;
        };

        copy_paste: copy_paste {
            compatible = "zmk,behavior-tap-dance";
            label = "COPY_PASTE";
            #binding-cells = <0>;
            bindings = <&kp LG(C)>, <&kp LG(V)>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            global-quick-tap;
            flavor = "balanced";
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 46 47 58 59 60 61 62 63 64 65 66 67 76 77 78 79 80 81 82 83>;
        };
    };

    macros {
        arrow: arrow {
            compatible = "zmk,behavior-macro";
            label = "ARROW";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
        };

        dbl_arrow: dbl_arrow {
            compatible = "zmk,behavior-macro";
            label = "DBL_ARROW";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
        };

        cmd_tab: cmd_tab {
            compatible = "zmk,behavior-macro";
            label = "CMD_TAB";
            #binding-cells = <0>;
            bindings = <&kt LEFT_GUI &kp TAB>;
        };

        cmd_shift_tab: cmd_shift_tab {
            compatible = "zmk,behavior-macro";
            label = "CMD_SHIFT_TAB";
            #binding-cells = <0>;
            bindings = <&kt LEFT_GUI &kt LEFT_SHIFT &kp TAB>;
        };

        dev_double_haakje: dev_double_haakje {
            compatible = "zmk,behavior-macro";
            label = "DEV_DOUBLE_HAAKJE";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp LPAR &kp RPAR &kp LEFT>;
        };
    };

    combos {
        compatible = "zmk,combos";

        press_esc_jk {
            bindings = <&kp ESCAPE>;
            key-positions = <43 44>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&caps_word        &kp LS(N1)  &kp LS(N2)    &kp LS(N3)               &kp LS(N4)               &kp LS(N5)  &kp C_VOLUME_UP                                                                 &mo 3             &kp LS(N6)  &kp LS(N7)      &kp LS(N8)    &kp LS(N9)  &kp LS(N0)  &none
&kp TAB           &kp Q       &kp W         &kp E                    &kp R                    &kp T       &kp C_VOLUME_DOWN                                                               &pp_or_next_song  &kp Y       &kp U           &kp I         &kp O       &kp P       &none
&kp ESC           &kp A       &kp S         &space_symbol_layer 5 D  &space_symbol_layer 1 F  &kp G       &none              &kp LEFT_ALT  &none      &none  &none  &none      &none      &none             &kp H       &kp J           &kp K         &kp L       &kp COLON   &kp SEMI
&kp LSHFT         &kp Z       &kp X         &kp C                    &kp V                    &kp B       &none              &none         &none      &none  &none  &none      &none      &none             &kp N       &kp M           &kp COMMA     &kp DOT     &kp FSLH    &kp RSHFT
&kp LEFT_CONTROL  &sl 3       &kp LEFT_ALT  &kp LEFT_ARROW           &kp RIGHT_ARROW                      &kp BACKSPACE      &kp LEFT_GUI  &kp LS(H)                &kp LS(L)  &kp ENTER  &kp SPACE                     &kp DOWN_ARROW  &kp UP_ARROW  &none       &none       &sl 1
            >;
        };

        layer_symbols {
            bindings = <
&none           &none  &none      &none              &none       &none           &trans                                                         &none             &none             &none                 &none                  &none              &none   &none
&none           &none  &kp GRAVE  &kp APOSTROPHE     &kp TILDE   &kp PERCENT     &none                                                          &none             &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &none   &none
&none           &none  &kp MINUS  &kp EQUAL          &kp DOLLAR  &kp UNDERSCORE  &none   &none   &none  &none  &none  &none  &none              &none             &kp LT            &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp GREATER_THAN   &trans  &none
&kp LEFT_SHIFT  &none  &none      &kp DOUBLE_QUOTES  &kp SLASH   &kp EXCL        &none   &none   &none  &none  &none  &none  &none              &none             &kp BACKSLASH     &kp SLASH             &kp EQUAL              &kp MINUS          &trans  &kp RIGHT_SHIFT
&none           &none  &none      &none              &none                       &trans  &trans  &none                &none  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE                    &none                 &kp PLUS               &none              &none   &none
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                                &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                                 &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans  &none  &none  &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &none   &trans  &none  &none  &trans  &none   &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans                &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                            &trans                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none  &none         &none         &none         &none         &none         &bootloader                                                                      &bootloader             &none         &none         &none         &none         &none         &none
&none  &none         &none         &none         &none         &none         &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR  &none  &none  &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5  &none         &none         &none         &none         &none         &none
&none  &none         &none         &none         &none         &none         &none                   &none       &none  &none  &none  &none       &none       &none                   &none         &none         &none         &none         &none         &none
&none  &none         &none         &bl BL_INC    &bl BL_DEC                  &rgb_ug RGB_TOG         &bl BL_TOG  &none                &none       &bl BL_TOG  &rgb_ug RGB_TOG                       &bl BL_INC    &bl BL_DEC    &none         &none         &none
            >;
        };

        arrows {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans                  &trans  &trans  &trans            &trans    &trans        &trans     &trans  &trans
            >;
        };

        numbers {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &trans        &trans        &trans        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans  &kp N7        &kp N8        &kp N9        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans                  &trans  &trans  &trans          &kp N0        &kp PERIOD    &trans        &trans  &trans
            >;
        };
    };
};
