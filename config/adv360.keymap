/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define NONE 0
#define SYMBOLS 1

/ {
    behaviors {
        #include "macros.dtsi"

        braces: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp LBRC>,
                <&kp RBRC>;
        };
        parenthesis: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp LPAR>,
                <&kp RPAR>;
        };
        lt_gt: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp LT>,
                <&kp GT>;
        };
        quotes: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_3";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp APOSTROPHE>,
                <&kp DOUBLE_QUOTES>;
        };
        colons: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_4";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp SEMICOLON>,
                <&kp COLON>;
        };
        square_bracket: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_5";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp LBKT>,
                <&kp RBKT>;
        };
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        arrows: arrows {
            compatible = "zmk,behavior-tap-dance";
            label = "ARROWS";
            #binding-cells = <0>;
            bindings =
                <&arrow>,
                <&dbl_arrow>;
        };
        space_symbol_layer: space_symbol_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACE_SYMBOL_LAYER";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    macros {
        arrow: arrow {
            compatible = "zmk,behavior-macro";
            label = "ARROW";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
        };
        dbl_arrow: dbl_arrow {
            compatible = "zmk,behavior-macro";
            label = "DBL_ARROW";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
 &kp BSLH     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5             &tog 1                                                                                 &mo 3  &kp N6    &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
  &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T       &kp C_VOL_UP                                                                      &kp C_PLAY_PAUSE   &kp Y     &kp U      &kp I     &kp O     &kp P  &kp EQUAL
  &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G  &kp C_VOLUME_DOWN      &none      &kp HOME  &none  &none          &none  &kp LEFT_ALT        &kp C_NEXT   &kp H     &kp J      &kp K     &kp L   &colons    &quotes
&kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B              &none      &none       &kp END  &none  &none          &none         &none             &none   &kp N     &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp RSHFT
&kp LCTRL  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                   &kp LGUI  &kp ENTER  &kp LEFT_ALT                &kp BACKSPACE         &mo 1         &kp SPACE          &kp DOWN     &kp UP  &kp LBKT  &kp RBKT      &mo 2
            >;
        };

        layer_symbols {
            bindings = <
&none  &none      &none              &none       &none           &none  &trans                                            &none  &none                 &none                  &none    &none  &none  &none
&none  &none  &kp GRAVE     &kp APOSTROPHE   &kp TILDE     &kp PERCENT   &none                                            &none  &none  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &none  &none  &none
&none  &none  &kp MINUS          &kp EQUAL  &kp DOLLAR  &kp UNDERSCORE   &none  &none  &none  &none  &none  &none  &none  &none  &none        &kp LEFT_BRACE        &kp RIGHT_BRACE  &arrows  &none  &none
&none  &none      &none  &kp DOUBLE_QUOTES   &kp SLASH        &kp EXCL   &none  &none  &none  &none  &none  &none  &none  &none  &none      &kp LEFT_BRACKET      &kp RIGHT_BRACKET    &none  &none  &none
&none  &none      &none              &none       &none                   &none  &none  &none                &none  &none  &none                       &kp LT                 &kp GT    &none  &none  &none
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                                 &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans   &none                                                 &none  &trans  &trans  &trans   &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans   &none  &trans  &trans  &none  &none  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans   &none   &none  &trans  &none  &none  &trans   &none   &none  &trans  &trans  &trans   &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans                &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none                                                                           &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none         &none         &none         &none         &none         &none             &bootloader                                                                      &bootloader         &none         &none         &none         &none         &none  &none
&none         &none         &none         &none         &none         &none  &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR  &none  &none  &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none  &none
&none         &none         &none         &none         &none         &none                   &none       &none  &none  &none  &none       &none       &none                   &none         &none         &none         &none         &none         &none  &none
&none         &none         &none    &bl BL_INC    &bl BL_DEC                       &rgb_ug RGB_TOG  &bl BL_TOG  &none                     &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none  &none
            >;
        };
    };
};
